# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

--Create table to download Spotify data from Kaggle 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

--What is the average danceability of all songs
SELECT AVG(danceability)/(count(track_name)) as AverageDance
FROM BIT_DB.Spotifydata


--What is the average popularity of each artist with more than one song in order of most popular
SELECT artist_name, ROUND(AVG(popularity),2) as Popularity
FROM BIT_DB.Spotifydata
Group By artist_name
HAVING count(artist_name)>1
ORDER BY Popularity DESC


--What is the total speechiness of each aretist
SELECT artist_name,  sum(speechiness) as TotalSpeechiness
FROM BIT_DB.Spotifydata 
GROUP BY artist_name


--Calculate the average popularity for the artists in the table. Then, for every artist with an average popularity of 90 or above, you need to show their name, their average popularity, and label them as a “Top Star”. 
#This was performed using common table expresion

WITH CTE AS 
(
SELECT artist_name, ROUND(AVG(popularity),2) as Popularity
FROM Spotifydata
Group By artist_name
)
SELECT artist_name, popularity,
case when popularity > 90 then "Top Star"
Else popularity
END popularity
FROM CTE 







